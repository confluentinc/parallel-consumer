# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

# Tests disabled due to flakiness with under resourced github test machines. Confluent Jira works fine. Will fix later.
name: Unit tests only

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # Why not? because we can.
        # 2.0.1, 2.1.1, 2.2.2, 2.3.1, 2.4.1 don't work - needs zstd and some kafka client libs.
        # Doesn't mean it couldn't be modified slightly to work...
        #ak: [ 2.5.1, 2.6.1, 2.7.0, 2.8.1, 3.0.1, 3.1.0 ]
        # 25 and 26 include a dep with a vulnerability which ossindex fails the build for
        ak: [ 2.7.0, 2.8.1, 3.0.1, 3.1.0 ]
        #ak: [ 2.7.0 ]
        #jdk: [ '-P jvm8-release -Djvm8.location=/opt/hostedtoolcache/Java_Zulu_jdk/8.0.332-9/x64', '' ]
        # TG currently targets 11, so can't run the tests on 8 https://github.com/astubbs/truth-generator/issues/114
        jdk: [ '' ]
        experimental: [ false ]
        name: [ "Stable AK version" ]
        include:
          # AK 2.4 not supported
          #           - ak: "'[2.4.1,2.5)'" # currently failing
          #             experimental: true
          #             name: "Oldest AK breaking version 2.4.1+ (below 2.5.0) expected to fail"
          - ak: "'[2.7.0,4)'" # currently failing
            experimental: true
            name: "Newest AK version 2.7.0+?"

    continue-on-error: ${{ matrix.experimental }}
    name: "AK: ${{ matrix.ak }} JDK: ${{ matrix.jdk }}"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'
          cache: 'maven'

      # the patch version will be upgraded silently causing the build to eventually start failing - need to store this as a var - possible?
      - name: Show java 1.8 home
        # /opt/hostedtoolcache/Java_Zulu_jdk/8.0.332-9/x64/bin/java
        run: which java

      #     - name: Setup JDK 1.9
      #       uses: actions/setup-java@v1
      #       with:
      #         java-version: 1.9

      #    - name: Show java 1.9 home
      # /opt/hostedtoolcache/jdk/9.0.7/x64
      #      run: which java

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'maven'

      - name: Show java 17 home
        # /opt/hostedtoolcache/jdk/13.0.2/x64/bin/java
        run: which java

      #    - name: Show java version
      #      run: java -version

      #     - name: Show mvn version
      #       run: mvn -version

      #    - name: Build with Maven on Java 13
      #      run: mvn -B package --file pom.xml


      # done automatically now
      #      - name: Cache Maven packages
      #        uses: actions/cache@v2.1.7
      #        with:
      #          path: ~/.m2/repository
      #          key: ${{ runner.os }}-m2
      #          restore-keys: ${{ runner.os }}-m2

      - name: Test with Maven
        run: mvn -Pci -B package ${{ matrix.jdk }} -Dkafka.version=${{ matrix.ak }} -Dlicense.skip

#     - name: Archive test results
#       if: ${{ always() }}
#       uses: actions/upload-artifact@v2
#       with:
#         name: test-reports
#         path: target/**-reports/*
#         retention-days: 14
#
#     - name: Archive surefire test results
#       if: ${{ always() }}
#       uses: actions/upload-artifact@v2
#       with:
#         name: test-reports
#         path: target/surefire-reports/*
#         retention-days: 14
