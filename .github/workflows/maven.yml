# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

# Tests disabled due to flakiness with under resourced github test machines. Confluent Jira works fine. Will fix later.
name: CI compile ONLY (tests disabled atm)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

#     - name: Setup JDK 1.8
#       uses: actions/setup-java@v1
#       with:
#         java-version: 1.8

#    - name: Show java 1.8 home
#    # /opt/hostedtoolcache/jdk/8.0.275/x64/bin/java
#      run: which java

    - name: Setup JDK 1.9
      uses: actions/setup-java@v1
      with:
        java-version: 1.9

#    - name: Show java 1.9 home
    # /opt/hostedtoolcache/jdk/9.0.7/x64
#      run: which java

    - name: Setup Java JDK 13
      uses: actions/setup-java@v1.4.3
      with:
        java-version: '13.0.2'
        java-package: jdk
        architecture: x64

#    - name: Show java 13 home
    # /opt/hostedtoolcache/jdk/13.0.2/x64/bin/java
#      run: which java

#    - name: Show java version
#      run: java -version

#     - name: Show mvn version
#       run: mvn -version

#    - name: Build with Maven on Java 13
#      run: mvn -B package --file pom.xml

#    - name: Cache the Maven packages to speed up build
#      uses: actions/cache@v1
#      with:
#        path: ~/.m2
#        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#        restore-keys: ${{ runner.os }}-m2

    - name: Cache Maven packages
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2
        restore-keys: ${{ runner.os }}-m2

# - name: Test with Maven on Java 8
#       run: mvn -B package --file pom.xml -P jvm8-release -Djvm8.location=/opt/hostedtoolcache/jdk/8.0.275/x64
# - name: Test with Maven on Java 9
#      run: mvn -B package --file pom.xml -P jvm9-release -Djvm9.location=/opt/hostedtoolcache/jdk/9.0.7/x64
    - name: Test with Maven on Java
      run: mvn -DskipTests=true -Dsurefire.useFile=false -Dfailsafe.useFile=false --fail-at-end -B validate install site
#       run: mvn -DskipITs=true -Dsurefire.useFile=false -Dfailsafe.useFile=false --fail-at-end -B validate install site --file pom.xml -P jvm9-release -Djvm9.location=/opt/hostedtoolcache/jdk/9.0.7/x64
#       run: mvn -DskipITs=true -Dsurefire.useFile=false -Dfailsafe.useFile=false --fail-at-end -B validate install site --file pom.xml -P jvm8-release -Djvm8.location=/opt/hostedtoolcache/jdk/8.0.275/x64

#     - name: Archive test results
#       if: ${{ always() }}
#       uses: actions/upload-artifact@v2
#       with:
#         name: test-reports
#         path: target/**-reports/*
#         retention-days: 14
#
#     - name: Archive surefire test results
#       if: ${{ always() }}
#       uses: actions/upload-artifact@v2
#       with:
#         name: test-reports
#         path: target/surefire-reports/*
#         retention-days: 14
